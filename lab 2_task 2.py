# Создаем матрицу для примера
'''
В данном примере мы создаем матрицу
matrix для примера и ищем строку
с максимальной суммой чисел.
Мы используем вложенный цикл для итерации по строкам и столбцам матрицы,
и с помощью функции sum() суммируем числа в каждой строке.
Затем мы проверяем, больше ли сумма чисел в текущей строке,
чем максимальная сумма, которую мы нашли до этого,
и обновляем значения переменных, если это так.
В конце мы выводим номер строки с максимальной суммой чисел.
Например, для матрицы [[1, 2, 3], [4, 5, 6], [7, 8, 9]] на выходе мы получим:2 '''
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# Инициализируем переменные для хранения максимальной суммы и ее индекса
#max_sum = float('-inf')
#float('-inf') обозначает отрицательную бесконечность,
# то есть наименьшее возможное число в пределах типа float.
# Это значение используется, например, для инициализации переменной,
# которая будет хранить максимальное значение,
# чтобы убедиться, что первое сравниваемое значение будет больше этого "пустого" значения.
#max_sum_index = -1


# Используем первую строку матрицы для инициализации переменных
max_sum = sum(matrix[0])
max_sum_index = 0
# Итерируемся по строкам матрицы и суммируем числа в каждой строке
for i in range(len(matrix)):
    row_sum = sum(matrix[i])
    # Если сумма в текущей строке больше максимальной, то обновляем значения переменных
    if row_sum > max_sum:
        max_sum = row_sum
        max_sum_index = i

# Выводим номер строки с максимальной суммой чисел
print(f'Номер строки с максимальной суммой чисел: {max_sum_index}')